@using Microsoft.AspNetCore.Identity
@using LoCoMPro_LV.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<link rel="stylesheet" href="~/css/manage.css" asp-append-version="true" />

<ul class="navbar-nav">
    @{
        string username = "";
        if (SignInManager.IsSignedIn(User))
        {
            username = User.Identity.Name;
        }
    }
    @if (SignInManager.IsSignedIn(User))
    {
        var AuthenticatedUserName = User.Identity.Name;
        var user = await UserManager.FindByNameAsync(AuthenticatedUserName);
        <li class="nav-item ml-auto">
            <button class="navbar_button">
                <a class="form-inline nav-link" id = "AgregarProducto" asp-area="" asp-page="/Stores/Create">
                    + Agregar Producto
                </a>
            </button>
        </li>
        if (user != null && user.IsModerator)
        {
            <li>
                <button id="trigger1" class="navbar_button form-inline nav-link">Moderar</button>
                <div id="popover1" class="popover popover-bottom" hidden>
                    <button class="navbar_button">
                        <a class="form-inline nav-link" asp-area="" asp-page="/Reports/Index">
                            Ver Reportes
                        </a>
                    </button>
                    <button class="navbar_button">
                        <a class="form-inline nav-link" asp-area="" asp-page="/Reports/Anomalies">
                            Ver Anomalías
                        </a>
                    </button>
                    <button class="navbar_button">
                        <a class="form-inline nav-link" asp-area="" asp-page="/Reports/TopReports">
                            Top Reportados
                        </a>
                    </button>
                </div>
            </li>
        }
        <li>

            <button id="trigger" class="navbar_button form-inline nav-link">Mi Perfil</button>
                
            <div id="popover" class="popover popover-bottom" hidden>
                <button class="navbar_button">
                    <a class="form-inline nav-link" asp-area="" asp-page="/Records/MyRecords">
                        Mis aportes
                    </a>
                </button>
                <button class="navbar_button">
                    <a class="form-inline nav-link" asp-area="" asp-page="/Lists/Index">
                        Mi lista de interés
                    </a>
                </button>
                <button class="navbar_button">
                    <a class="form-inline nav-link" asp-area="Identity" asp-page="/Account/Manage/Index">
                        Gestionar cuenta
                    </a>
                </button>

                <form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button class="navbar_button" id="logout" type="submit">
                        <a class ="form-inline nav-link">Cerrar sesión </a>
                    </button>
                </form>

            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <button class="navbar_button">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesión</a>
            </button>
        </li>
        <li class="nav-item">
            <button class="navbar_button">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
            </button>
        </li>
    }
</ul>

<script>
    var trigger = document.getElementById("trigger");
    var popover = document.getElementById("popover");

    var trigger1 = document.getElementById("trigger1");
    var popover1 = document.getElementById("popover1");

    // Función para mostrar u ocultar el popover
    function togglePopover(trigger, popover) {
        if (popover && trigger) {
            if (popover.hidden) {
                // Si el popover está oculto, lo mostramos
                popover.hidden = false;

                // Posicionar el popover en relación con el trigger
                var triggerRect = trigger.getBoundingClientRect();
                var popoverRect = popover.getBoundingClientRect();
                popover.style.left = triggerRect.left + (triggerRect.width - popoverRect.width) / 2 + "px";
                popover.style.top = triggerRect.bottom + "px";
            } else {
                // Si el popover está visible, lo ocultamos
                popover.hidden = true;
            }
        }
    }

    // Mostrar u ocultar el primer popover cuando se hace clic en su trigger
    if (trigger1) {
        trigger1.addEventListener("click", function () {
            togglePopover(trigger1, popover1);

            // Cerrar el segundo popover si está abierto
            if (popover) {
                popover.hidden = true;
            }
        });
    }

    // Mostrar u ocultar el segundo popover cuando se hace clic en su trigger
    if (trigger) {
        trigger.addEventListener("click", function () {
            togglePopover(trigger, popover);

            // Cerrar el primer popover si está abierto
            if (popover1) {
                popover1.hidden = true;
            }
        });
    }

    // Ocultar ambos popovers cuando se hace clic fuera de ellos
    document.addEventListener("click", function (event) {
        if (popover && trigger && !popover.contains(event.target) && !trigger.contains(event.target) && popover1 && trigger1 && !popover1.contains(event.target) && !trigger1.contains(event.target)) {
            popover.hidden = true;
            popover1.hidden = true;
        }
    });

    // Ocultar ambos popovers cuando se presiona la tecla Escape
    document.addEventListener("keydown", function (event) {
        if (event.key === "Escape" && popover && popover1) {
            popover.hidden = true;
            popover1.hidden = true;
        }
    });
</script>
