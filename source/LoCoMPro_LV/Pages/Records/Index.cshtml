@page
@model LoCoMPro_LV.Pages.Records.IndexModel

@{
    ViewData["Title"] = "Index";
}


<div class="container container-search index align-items-center">
    <div class="row">
        <form method="get" asp-page="/Records/Index" onsubmit="return validateSearchForm()">
            <div class="col buscar-form">
                <div class="form-group">
                    <label class="searchString" for="SearchString">Nombre del producto</label>
                    <div class="input-group mb-3">
                        <input type="text" name="SearchString" id="SearchString" value="@Model.SearchString" class="form-control" oninput="toggleSearchButton()" />
                        <input class="loupe-button btn btn-light" id="button-addon2" type="submit" value="Buscar" disabled>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


<script>
    // Asegura que la función "toggleSearchButton()" se ejecute al cargar la página.
    window.addEventListener('DOMContentLoaded', (event) => {
        toggleSearchButton();
    });

    // Habilita o deshabilita el botón de búsqueda según si el campo de texto está vacío o no.
    function toggleSearchButton() {
        const searchStringInput = document.getElementById("SearchString");
        const searchButton = document.getElementById("button-addon2");

        if (searchStringInput.value.trim() !== "") {
            searchButton.disabled = false;
        } else {
            searchButton.disabled = true;
        }
    }
</script>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Record[0].NameProduct)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Record[0].NameStore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Record[0].RecordDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Record[0].NameProvince)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Record[0].NameCanton)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Record[0].Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var firstItem in Model.Record)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => firstItem.NameProduct)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => firstItem.NameStore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => firstItem.RecordDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => firstItem.NameProvince)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => firstItem.NameCanton)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => firstItem.Price)
                </td>
            </tr>
        }

    </tbody>

</table>