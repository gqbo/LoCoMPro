@page
@model LoCoMPro_LV.Pages.Records.CreateModel
@{
    ViewData["Title"] = "Crear Registro";
}

<h1>Agregar Producto</h1>


<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div class="form-group">
                <label asp-for="Record.NameGenerator"></label>
                <input asp-for="Record.NameGenerator" class="form-control" />
                <span asp-validation-for="Record.NameGenerator"></span>
            </div>
            <div id="form-group">
                <label for="Store">Establecimiento</label>
                <input name="Record.NameStore" id="Store" type="text" class="form-control   />
            </div>
            <div class="form-group">
                <label for="Province">Provincia</label>
                <select id="Province" asp-for="Record.NameProvince" asp-items="Model.Provinces" class="form-control">
                    <option value=""> </option>
                </select>
            </div>
            <div class="form-group">
                <label for="Canton">Cantón</label>
                <select id="Canton" name="Record.NameCanton" class="form-control">
                    <option value="">Todos</option>
                </select>
            </div>
            <div id="form-group" class="mb-3">
                <label for="Products">Producto</label>
                <input name="Record.NameProduct" id="Products" type="text" class="form-control    />
            </div>
            <div class="form-group">
                <label asp-for="Record.Price"></label>
                <input asp-for="Record.Price" class="form-control" />
                <span asp-validation-for="Record.Price"></span>
            </div>

            <div id="form-group">
                <label for="Category">Categoría</label>
                <input name="NameCategory" id="Category" type="text" class="form-control      />
            </div>

            <div class="form-group">
                <input type="submit" value="Confirmar&#10;Producto" class="btn btn-primary btn-sm" />
                <a asp-page="Index" class="btn btn-danger">Cancelar</a>
            </div>
        </form>
    </div>

    <div class="col-md-2"></div>
    <div class="col-md-6">
        <form>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label asp-for="Record.Description" class="control-label"></label>
                        <textarea asp-for="Record.Description" class="form-control form-control-lg" rows="6"></textarea>
                        <span asp-validation-for="Record.Description" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts{
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        // Espera a que el documento esté completamente cargado
        document.addEventListener("DOMContentLoaded", function () {
            var provinceDropdown = document.getElementById("Province");
            var cantonDropdown = document.getElementById("Canton");

            // Crear un objeto para almacenar cantones por provincia
            var cantonsByProvince = @Html.Raw(Json.Serialize(Model.Cantons));

            // Función para actualizar las opciones del dropdown de cantones
            function actualizarDropdownCantones() {
                var selectedProvince = provinceDropdown.value;
                cantonDropdown.innerHTML = ''; // Limpiar opciones anteriores

                var defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.text = " ";
                cantonDropdown.appendChild(defaultOption);

                // Agregar las opciones de cantones basadas en la provincia seleccionada
                cantonsByProvince[selectedProvince].forEach(function (canton) {
                    var option = document.createElement("option");
                    option.value = canton;
                    option.text = canton;
                    cantonDropdown.appendChild(option);
                });
            }

            // Agregar un manejador de eventos de cambio al dropdown de provincias
            provinceDropdown.addEventListener("change", actualizarDropdownCantones);

            // Llamar a la función para inicializar el dropdown de cantones con la selección inicial
            actualizarDropdownCantones();
        });
    </script>
    <script type="text/javascript">
        $(function () {
            var data = @Html.Raw(Json.Serialize(Model.Stores)); //["White Oak", "White Pine", "Whine Sunflower", "White Rose"]
            $("#Store").autocomplete({

                source: data,
                minLength: 1 // Establece la longitud mínima de caracteres para activar el autocompletado
            });
        });
    </script>
    <script type="text/javascript">
        $(function () {
            var data = @Html.Raw(Json.Serialize(Model.Product)); //["White Oak", "White Pine", "Whine Sunflower", "White Rose"]
            $("#Products").autocomplete({

                source: data,
                minLength: 1 // Establece la longitud mínima de caracteres para activar el autocompletado
            });
        });
    </script>
    <script type="text/javascript">
        $(function () {
            var data = @Html.Raw(Json.Serialize(Model.Categories)); //["White Oak", "White Pine", "Whine Sunflower", "White Rose"]
            $("#Category").autocomplete({
                source: data,
                minLength: 1 // Establece la longitud mínima de caracteres para activar el autocompletado
            });
        });
    </script>
}