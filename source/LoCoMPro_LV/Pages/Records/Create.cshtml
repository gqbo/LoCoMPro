@page
@model LoCoMPro_LV.Pages.Records.CreateModel
@{
    ViewData["Title"] = "Crear Registro";
}

<h1>Crear Registro</h1>

<form method="post">
    <div class="form-group">
        <label asp-for="Record.NameGenerator"></label>
        <input asp-for="Record.NameGenerator" class="form-control" />
        <span asp-validation-for="Record.NameGenerator"></span>
    </div>
    <div class="form-group">
        <label asp-for="Record.Description"></label>
        <input asp-for="Record.Description" class="form-control" />
        <span asp-validation-for="Record.Description"></span>
    </div>
    <div class="form-group">
        <label asp-for="Record.Price"></label>
        <input asp-for="Record.Price" class="form-control" />
        <span asp-validation-for="Record.Price"></span>
    </div>
    <div class="form-group">
        <label for="Record.NameStore">Nombre de la Tienda</label>
        <input id="NameStore" asp-for="Record.NameStore" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Province">Provincia</label>
        <select id="Province" asp-for="Record.NameProvince" asp-items="Model.Provinces" class="form-control">
            <option value="">Todas</option>
        </select>
    </div>
    <div class="form-group">
        <label for="Canton">Cantón</label>
        <select id="Canton" name="Record.NameCanton" class="form-control">
            <option value="">Todos</option>
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Record.NameProduct"></label>
        <input asp-for="Record.NameProduct" class="form-control" />
        <span asp-validation-for="Record.NameProduct"></span>
    </div>
    <!-- Agrega campos adicionales del formulario aquí -->

    <button type="submit" class="btn btn-primary">Guardar</button>
</form>

<a asp-page="./Index">Volver a la lista</a>


@section scripts{
    <script>
        // Espera a que el documento esté completamente cargado
        document.addEventListener("DOMContentLoaded", function () {
            var provinceDropdown = document.getElementById("Province");
            var cantonDropdown = document.getElementById("Canton");

            // Crear un objeto para almacenar cantones por provincia
            var cantonsByProvince = @Html.Raw(Json.Serialize(Model.Cantons));

            // Función para actualizar las opciones del dropdown de cantones
            function actualizarDropdownCantones() {
                var selectedProvince = provinceDropdown.value;
                cantonDropdown.innerHTML = ''; // Limpiar opciones anteriores

                var defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.text = "Todos";
                cantonDropdown.appendChild(defaultOption);

                // Agregar las opciones de cantones basadas en la provincia seleccionada
                cantonsByProvince[selectedProvince].forEach(function (canton) {
                    var option = document.createElement("option");
                    option.value = canton;
                    option.text = canton;
                    cantonDropdown.appendChild(option);
                });
            }

            // Agregar un manejador de eventos de cambio al dropdown de provincias
            provinceDropdown.addEventListener("change", actualizarDropdownCantones);

            // Llamar a la función para inicializar el dropdown de cantones con la selección inicial
            actualizarDropdownCantones();
        });
    </script>
}
