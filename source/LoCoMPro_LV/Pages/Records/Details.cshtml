@page
@Html.AntiForgeryToken()
@model LoCoMPro_LV.Pages.Records.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<div class="container details-container">
    <div class="row d-flex justify-content-center align-items-center">
        <div class="card">
            <div class="bg">
                <div class="info_detail">
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col-10">
                            <h2>
                                @Html.DisplayFor(model => model.Records.First().Record.NameProduct)
                            </h2>
                        </div>
                        <div class="col-2 d-flex justify-content-end">
                            <h4>
                                ₡@Html.DisplayFor(model => model.Records.First().Record.Price)
                            </h4>
                        </div>
                    </div>
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col">
                            <h3>
                                Usuario: @Html.DisplayFor(model => model.Records.First().Record.NameGenerator)
                            </h3>
                        </div>
                    </div>
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col">
                            <h6>
                                Tienda: @Html.DisplayFor(model => model.Records.First().Record.NameStore)
                                <br>
                                Provincia: @Html.DisplayFor(model => model.Records.First().Store.NameProvince)
                                <br>
                                Cantón: @Html.DisplayFor(model => model.Records.First().Store.NameCanton)
                            </h6>
                        </div>
                    </div>
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col">
                            <h7>
                                Descripción: @Html.DisplayFor(model => model.Records.First().Record.Description)
                            </h7>
                        </div>
                    </div>
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col d-flex justify-content-end">
                            <h7>
                                @Html.DisplayFor(model => model.Records.First().Record.RecordDate)
                            </h7>
                        </div>
                    </div>
                </div>
            </div>
            <div class="blob"></div>
        </div>
    </div>
    <div class="row">
        <table class="table-details">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Records[0].Record.RecordDate)
                    </th>
                    <th>
                        <div class="table-item precio">
                            @Html.DisplayNameFor(model => model.Records[0].Record.Price)
                        </div>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Records[0].Record.NameGenerator)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Records[0].Record.Description)
                    </th>
                    <th>
                        Valoración
                    </th>
                    <th class="report">
                        Reportar
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var firstItem in Model.Records)
                {
                    <tr>
                        <td>
                            <div class="table-item">
                                @Html.DisplayFor(modelItem => firstItem.Record.RecordDate)
                            </div>
                        </td>
                        <td>
                            <div class="table-item precio">
                                ₡@Html.DisplayFor(modelItem => firstItem.Record.Price)
                            </div>
                        </td>
                        <td>
                            <div class="table-item">
                                @Html.DisplayFor(modelItem => firstItem.Record.NameGenerator)
                            </div>
                        </td>
                        <td>
                            <div class="table-item">
                                @Html.DisplayFor(modelItem => firstItem.Record.Description)
                            </div>
                        </td>
                        <td>
                            <div class="ratings-wrapper">
                                <div class="ratings">
                                    @for (var starNumber = 5; starNumber >= 1; starNumber--)
                                    {
                                        <span data-rating="@starNumber" data-nameGenerator="@firstItem.Record.NameGenerator" data-RecordDate="@firstItem.Record.RecordDate" 
                                        @(starNumber <= firstItem.AverageRating ? "data-clicked" : "")>
                                            <span>★</span>
                                        </span>
                                    }
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="table-item report">
                                <a class="election" asp-page="../Reports/Create" asp-route-NameGenerator="@firstItem.Record.NameGenerator" asp-route-RecordDate="@firstItem.Record.RecordDate.ToString("yyyy-MM-dd HH:mm:ss")"><img src="~/Images/report.png"></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
    <div>
        <a href="javascript:history.go(-1);">Volver</a>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    const ratingsWrappers = document.querySelectorAll('.ratings-wrapper');

    function manageStarRatings() {
        ratingsWrappers.forEach(ratingsWrapper => {
            const stars = ratingsWrapper.querySelectorAll('.ratings span');
            const isAuthenticated = '@User.Identity.IsAuthenticated';

            stars.forEach(star => {
                star.addEventListener('click', () => {

                    if (isAuthenticated == "True") {
                      
                        var rating = star.getAttribute('data-rating');
                        var nameGenerator = star.getAttribute('data-nameGenerator');
                        var recordDate = star.getAttribute('data-RecordDate');

                        updateStarColors(stars, rating);
                        sendPost(rating, nameGenerator, recordDate);
                    } else {
                        window.location.href = '../Identity/Account/Login';
                    }
                });
            });
        });
    }


    function updateStarColors(stars, rating) {
        stars.forEach(star => {
            const starRating = parseInt(star.getAttribute('data-rating'));
            if (starRating <= rating) {
                star.setAttribute('data-clicked', '');
            } else {
                star.removeAttribute('data-clicked');
            }
        });
    }

    function logData(ratingsWrapper, rating) {
        const recordId = ratingsWrapper.getAttribute('data-record-id');
        const [nameGenerator, recordDate] = recordId.split('-');
        var userName = '@User.Identity.Name';
        console.log(`Estrellas: ${rating}`);
        console.log(`Usuario autor: ${nameGenerator}`);
        console.log(`Fecha: ${recordDate}`);
        console.log(`Usuario calificador: ${userName}`);
    }

    function sendPost(rating, nameGenerator, recordDate) {
        $.ajax({
            type: 'POST',
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            url: '/Records/Details?handler=SubmitRating',
            data: { rating: rating, nameGenerator: nameGenerator, recordDate: recordDate },
            success: function (data) {
            },
            error: function (error) {
            }
        });
    }
 
    manageStarRatings();

</script>

